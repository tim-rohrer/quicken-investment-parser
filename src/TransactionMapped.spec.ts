import { isNumberObject } from "util/types"
import TransactionMapped from "./TransactionMapped"

const transactionFixture = [
  {
    Date: "3/31/2016",
    Type: "Buy",
    Action: "",
    Security: "FDIC INSURED ACCOUNT - IRA",
    Symbol: "QRETQ",
    Payee: "FDIC INSURED ACCOUNT - IRA",
    "Statement Payee": "",
    Category: "Investments:Buy",
    "Comm/Fee": "",
    "Shares Out": "",
    "Shares In": "0.5",
    Shares: "0.5",
    "Cash Out": "0.50",
    "Cash In": "",
    "Invest Amt": "0.50",
    Amount: "-0.50",
    Account: "Emily's IRA",
    "Statement Memo": "",
    Reference: "",
  },
  {
    Date: "3/31/2016",
    Type: "Buy",
    Action: "",
    Security: "USAA Tax-Exempt Money Market Fund",
    Symbol: "USEXX",
    Payee: "USAA Tax-Exempt Money Market Fund",
    "Statement Payee": "",
    Category: "Investments:Buy",
    "Comm/Fee": "",
    "Shares Out": "",
    "Shares In": "0.09",
    Shares: "0.09",
    "Cash Out": "0.09",
    "Cash In": "",
    "Invest Amt": "0.09",
    Amount: "-0.09",
    Account: "Joint Brokerage",
    "Statement Memo": "",
    Reference: "",
  },
  {
    Date: "3/31/2016",
    Type: "Dividend Income",
    Action: "",
    Security: "USAA Tax-Exempt Money Market Fund",
    Symbol: "USEXX",
    Payee: "USAA Tax-Exempt Money Market Fund",
    "Statement Payee": "",
    Category: "Investments:Dividend Income Tax-Free",
    "Comm/Fee": "",
    "Shares Out": "",
    "Shares In": "",
    Shares: "",
    "Cash Out": "",
    "Cash In": "0.09",
    "Invest Amt": "",
    Amount: "0.09",
    Account: "Joint Brokerage",
    "Statement Memo": "",
    Reference: "",
  },
  {
    Date: "3/31/2016",
    Type: "Interest Income",
    Action: "",
    Security: "",
    Symbol: "",
    Payee: "",
    "Statement Payee": "",
    Category: "Investments:Interest Income",
    "Comm/Fee": "",
    "Shares Out": "",
    "Shares In": "",
    Shares: "",
    "Cash Out": "",
    "Cash In": "0.89",
    "Invest Amt": "",
    Amount: "0.89",
    Account: "Tim's IRA",
    "Statement Memo": "FDIC INSURED ACCOUNT - IRA INTEREST RECEIVED",
    Reference: "",
  },
  {
    Date: "3/31/2016",
    Type: "Buy",
    Action: "",
    Security: "FDIC INSURED ACCOUNT - IRA",
    Symbol: "QRETQ",
    Payee: "FDIC INSURED ACCOUNT - IRA",
    "Statement Payee": "",
    Category: "Investments:Buy",
    "Comm/Fee": "",
    "Shares Out": "",
    "Shares In": "0.89",
    Shares: "0.89",
    "Cash Out": "0.89",
    "Cash In": "",
    "Invest Amt": "0.89",
    Amount: "-0.89",
    Account: "Tim's IRA",
    "Statement Memo": "",
    Reference: "",
  },
  {
    Date: "4/29/2016",
    Type: "Interest Income",
    Action: "",
    Security: "",
    Symbol: "",
    Payee: "",
    "Statement Payee": "",
    Category: "Investments:Interest Income",
    "Comm/Fee": "",
    "Shares Out": "",
    "Shares In": "",
    Shares: "",
    "Cash Out": "",
    "Cash In": "0.49",
    "Invest Amt": "",
    Amount: "0.49",
    Account: "Emily's IRA",
    "Statement Memo": "FDIC INSURED ACCOUNT - IRA INTEREST RECEIVED",
    Reference: "",
  },
  {
    Date: "4/29/2016",
    Type: "Buy",
    Action: "",
    Security: "FDIC INSURED ACCOUNT - IRA",
    Symbol: "QRETQ",
    Payee: "FDIC INSURED ACCOUNT - IRA",
    "Statement Payee": "",
    Category: "Investments:Buy",
    "Comm/Fee": "",
    "Shares Out": "",
    "Shares In": "0.49",
    Shares: "0.49",
    "Cash Out": "0.49",
    "Cash In": "",
    "Invest Amt": "0.49",
    Amount: "-0.49",
    Account: "Emily's IRA",
    "Statement Memo": "",
    Reference: "",
  },
  {
    Date: "4/29/2016",
    Type: "Buy",
    Action: "",
    Security: "USAA Tax-Exempt Money Market Fund",
    Symbol: "USEXX",
    Payee: "USAA Tax-Exempt Money Market Fund",
    "Statement Payee": "",
    Category: "Investments:Buy",
    "Comm/Fee": "",
    "Shares Out": "",
    "Shares In": "0.09",
    Shares: "0.09",
    "Cash Out": "0.09",
    "Cash In": "",
    "Invest Amt": "0.09",
    Amount: "-0.09",
    Account: "Joint Brokerage",
    "Statement Memo": "",
    Reference: "",
  },
  {
    Date: "4/29/2016",
    Type: "Dividend Income",
    Action: "",
    Security: "USAA Tax-Exempt Money Market Fund",
    Symbol: "USEXX",
    Payee: "USAA Tax-Exempt Money Market Fund",
    "Statement Payee": "",
    Category: "Investments:Dividend Income Tax-Free",
    "Comm/Fee": "",
    "Shares Out": "",
    "Shares In": "",
    Shares: "",
    "Cash Out": "",
    "Cash In": "0.09",
    "Invest Amt": "",
    Amount: "0.09",
    Account: "Joint Brokerage",
    "Statement Memo": "",
    Reference: "",
  },
  {
    Date: "4/29/2016",
    Type: "Interest Income",
    Action: "",
    Security: "",
    Symbol: "",
    Payee: "",
    "Statement Payee": "",
    Category: "Investments:Interest Income",
    "Comm/Fee": "",
    "Shares Out": "",
    "Shares In": "",
    Shares: "",
    "Cash Out": "",
    "Cash In": "0.87",
    "Invest Amt": "",
    Amount: "0.87",
    Account: "Tim's IRA",
    "Statement Memo": "FDIC INSURED ACCOUNT - IRA INTEREST RECEIVED",
    Reference: "",
  },
  {
    Date: "4/29/2016",
    Type: "Buy",
    Action: "",
    Security: "FDIC INSURED ACCOUNT - IRA",
    Symbol: "QRETQ",
    Payee: "FDIC INSURED ACCOUNT - IRA",
    "Statement Payee": "",
    Category: "Investments:Buy",
    "Comm/Fee": "",
    "Shares Out": "",
    "Shares In": "0.87",
    Shares: "0.87",
    "Cash Out": "0.87",
    "Cash In": "",
    "Invest Amt": "0.87",
    Amount: "-0.87",
    Account: "Tim's IRA",
    "Statement Memo": "",
    Reference: "",
  },
]

let quickenData = transactionFixture

describe("TransactionMapped", () => {
  it("instantiates with a property of Quicken Lot Data", () => {
    const testTransactionMapped = new TransactionMapped(quickenData[0])

    expect(testTransactionMapped).toHaveProperty("quickenData")
  })
  it("contains mapped data elements of name and ticker", () => {
    const testTransactionMapped = new TransactionMapped(quickenData[0])

    expect(testTransactionMapped.securityName).toEqual(quickenData[0].Security)
    expect(testTransactionMapped.securitySymbol).toEqual(quickenData[0].Symbol)
  })
  it("identifies the account", () => {
    const testTransactionMapped = new TransactionMapped(quickenData[0])

    expect(testTransactionMapped.account).toEqual(quickenData[0].Account)
  })
  it("handles conversion of strings to numbers where appropriate", () => {
    const testTransactionMapped = new TransactionMapped(quickenData[0])

    expect(typeof testTransactionMapped.sharesOut).toBe("number")
  })
})
